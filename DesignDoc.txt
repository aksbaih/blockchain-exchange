// =================== CS251 DEX Project =================== // 
//                      Design Document                      //
//                          Names                            //
// ========================================================= //  

1. Explain why adding and removing liquidity to your exchange does not change the exchange rate.


# : answer question 1 here
Because the provider is required to add a propotional amount of both currencies equivelant to the current exchange
rate. For example, if the pool has 1/2 and we add 2/4 to both pools, the result is 3/6 which equals 1/2 in ratio,
keeping the exchange rate constant.


3. Describe at least one method you used to minimize your exchange contract's gas usage. Why was this method effective?


The ordering of the "require" statements is organized to terminate the function if it fails simpler checks first
before checking the heavier-weight conditions. This saves some gas by avoiding the heavy-weight checks if the simpler
ones fail.
Example:
require(msg.value > 0, "Provided amount of ETH must be positive");
require(priceETH() >= min_exchange_rate, "Exchange rate is below the minimum");
